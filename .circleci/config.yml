version: 2
jobs:
  cmake_no_grpc:
    resource_class: xlarge
    docker:
      - image: ubuntu:18.04
    steps:
      - checkout
      - run: ./ci/setup_build_environment.sh
      - run: ./ci/install_opentracing.sh
      - run: ./ci/install_protobuf.sh
      - run: ./ci/do_ci.sh cmake.minimal
      - store_artifacts:
          path: /build/Testing/Temporary/LastTest.log
          destination: Test.log

  cmake_with_grpc:
    resource_class: xlarge
    docker:
      - image: ubuntu:18.04
    steps:
      - checkout
      - run: ./ci/setup_build_environment.sh
      - run: ./ci/install_grpc.sh
      - run: ./ci/install_libevent.sh
      - run: ./ci/install_cares.sh
      - run: ./ci/install_opentracing.sh
      - run: ./ci/do_ci.sh cmake.full
      - store_artifacts:
          path: /build/Testing/Temporary/LastTest.log
          destination: Test.log

  test:
    resource_class: xlarge
    docker:
      - image: ubuntu:18.04
    steps:
      - checkout
      - run: ./ci/setup_build_environment.sh
      - run: ./ci/install_bazel.sh
      - run: ./ci/do_ci.sh bazel.test

  asan:
    resource_class: xlarge
    docker:
      - image: ubuntu:18.04
    steps:
      - checkout
      - run: ./ci/setup_build_environment.sh
      - run: ./ci/install_clang.sh
      - run: ./ci/install_bazel.sh
      - run: ./ci/do_ci.sh bazel.asan

  tsan:
    resource_class: xlarge
    docker:
      - image: ubuntu:18.04
    steps:
      - checkout
      - run: ./ci/setup_build_environment.sh
      - run: ./ci/install_clang.sh
      - run: ./ci/install_bazel.sh
      - run: ./ci/do_ci.sh bazel.tsan

  release:
    resource_class: xlarge
    docker:
      - image: ubuntu:18.04
    steps:
      - run: apt-get -qq update; apt-get -y install git ssh
      - checkout
      - run: ./ci/setup_build_environment.sh
      - attach_workspace:
          at: /plugin
      - run: ./ci/do_ci.sh release

  benchmark:
    resource_class: xlarge
    docker:
      - image: ubuntu:18.04
    steps:
      - checkout
      - run: ./ci/setup_build_environment.sh
      - run: ./ci/install_bazel.sh
      - run: ./ci/do_ci.sh bazel.benchmark
      - store_artifacts:
          path: /benchmark
          desination: benchmark

  clang_tidy:
    resource_class: xlarge
    docker:
      - image: ubuntu:18.04
    steps:
      - checkout
      - run: ./ci/setup_build_environment.sh
      - run: ./ci/install_clang.sh
      - run: ./ci/install_bazel.sh
      - run:
          command: ./ci/do_ci.sh clang_tidy
          no_output_timeout: 1800
      - store_artifacts:
          path: /clang-tidy-result.txt
          destination: /clang-tidy-result.txt
      - store_artifacts:
          path: /clang-tidy-errors.txt
          destination: /clang-tidy-errors.txt

  build_plugin:
    resource_class: xlarge
    docker:
      - image: ubuntu:18.04
    steps:
      - run: apt-get -qq update; apt-get -y install git ssh
      - checkout
      - run: ./ci/setup_build_environment.sh
      - run: ./ci/install_bazel.sh
      - run: ./ci/do_ci.sh plugin
      - store_artifacts:
          path: /plugin
          destination: plugin
      - persist_to_workspace:
          root: /plugin
          paths:
            - "*"

  plugin_test:
    resource_class: xlarge
    docker:
      - image: ubuntu:18.04
    steps:
      - checkout
      - run: ./ci/setup_build_environment.sh
      - attach_workspace:
          at: /plugin
      - run: ./ci/do_ci.sh plugin.test

  python_wheel_test:
    resource_class: xlarge
    docker:
      - image: ubuntu:18.04
    steps:
      - checkout
      - run: apt-get -qq update; apt-get -y install python3 python3-pip
      - attach_workspace:
          at: /plugin
      - run: ./ci/do_ci.sh python.wheel.test

  coverage:
    resource_class: xlarge
    docker:
      - image: ubuntu:18.04
    steps:
      - checkout
      - run: ./ci/setup_build_environment.sh
      - run: ./ci/install_bazel.sh
      - run: ./ci/do_ci.sh bazel.coverage
      - store_artifacts:
          path: /coverage
          desination: coverage

  regression_test:
    docker:
      - image: circleci/python:3.7.4
    working_directory: ~/repo

    steps:
      - run:
          name: clone
          command: |
            git clone https://github.com/isaaczinda/tracer-benchmark.git
            cd tracer-benchmark

      - attach_workspace:
          at: /plugin

      - run:
          name: build & test
          command: |
            cd tracer-benchmark
            python -m venv venv
            source venv/bin/activate
            source ./scripts/setup_environment.sh
            pip install /plugin/*.whl
            ./scripts/generate_proto.sh
            pytest test_python_cpp.py

workflows:
  version: 2
  build_and_test:
    jobs:
      - cmake_no_grpc
      - cmake_with_grpc
      - test
      - asan
      - tsan
      - benchmark
      - coverage
      - build_plugin
      - clang_tidy
      - plugin_test:
          requires:
            - build_plugin
      - python_wheel_test:
          requires:
            - build_plugin
      - regression_test:
          requires:
            - build_plugin
  deploy:
    jobs:
      - build_plugin:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - release:
          requires:
            - build_plugin
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
